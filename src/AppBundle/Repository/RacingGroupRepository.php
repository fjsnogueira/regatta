<?php

namespace AppBundle\Repository;

use AppBundle\DRV_Import\Boat;
use AppBundle\Entity\Race;
use AppBundle\Entity\RacingGroup;
use AppBundle\Entity\RacingGroupsPerSection;
use Psr\Log\LoggerInterface;

/**
 * RaceGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RacingGroupRepository extends \Doctrine\ORM\EntityRepository
{
    public function createOrUpdate(Boat $boat, Race $race, LoggerInterface $logger)
    {
        /** @var RacingGroup $dbItem */
        $dbItem = null;
        // first try to find by ID
        if (!empty($boat->id)) {
            $dbItem = $this->findOneByDrvId($boat->id);
        }
        // if this does not help, do a fuzzy search
        if (null == $dbItem) {
            // TODO search by club + representative + name + race?
        }

        if (null != $dbItem) {
            // TODO updating
            $logger->warning("Implementation missing for updating of race groups in RacingGroupRepository::createOrUpdate");
        } else {
            // create new group
            $em = $this->getEntityManager();
            $dbItem = new RacingGroup();

            /** @var \AppBundle\Entity\Club $club */
            $club = $this->getEntityManager()->getRepository('AppBundle:Club')->findOneByDrvId($boat->club_id);
            if (null == $club) {
                $message = "Found no club with DRV-ID {$boat->club_id}! No group created for "
                    . "[{$boat->name}, {$boat->id}]";
                $logger->warning($message);
                throw new \Exception($message);
            }
            /** @var \AppBundle\Entity\RaceSection $raceSection */
            $raceSection = $race->getSections()->get(0);
            if (null == $raceSection) {
                $message = "Found no section for race {$race->getId()}! No group created for "
                    . "[{$boat->name}, {$boat->id}]";
                $logger->warning($message);
                throw new \Exception($message);
            }
            // save to DB - bugfix: lane for section is always 1 (because section does not exist yet)
            $em->flush();

            /** @var \AppBundle\Repository\RacingGroupsPerSectionRepository $sectionRepo */
            $sectionRepo = $this->getEntityManager()->getRepository('AppBundle:RacingGroupsPerSection');
            $section = new RacingGroupsPerSection();
            $section
                ->setSection($raceSection)
                ->setLane($sectionRepo->getNextLaneForSection($raceSection))
            ;
            $em->persist($section);

            $dbItem->setClub($club)
                ->setDrvId($boat->id)
                ->setName($boat->name)
                ->setSection($section)
            ;
            $em->persist($dbItem);
        }

        return $dbItem;
    }
}
